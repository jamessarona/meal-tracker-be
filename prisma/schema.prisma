generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  MANAGEMENT
  EMPLOYEE
  VENDOR
}

model User {
  id                  Int       @id @default(autoincrement())
  role                Role    @default(EMPLOYEE)
  employee_id         Int       @unique
  email               String    @unique
  password            String
  first_name          String
  middle_name         String?
  last_name           String
  position            String?
  manager             String?
  cluster             String?
  meal_type_id        Int?
  verification_code   String?
  verification_expiry DateTime?
  is_verified         Boolean   @default(false)
  verified_at         DateTime?
  is_active           Boolean   @default(true)
  created_at          DateTime  @default(now())
  updated_at          DateTime  @updatedAt
  
  sessions      UserSession[]
  audit_logs    AuditLog[]

  @@index([first_name])
  @@index([last_name])
  @@index([employee_id])
  @@index([email])
  @@index([created_at])
  @@map("users") 
}

model UserSession {
  id           Int      @id @default(autoincrement())
  token        String   @unique
  employee_id  Int
  ip_address   String?
  user_agent   String?
  device       String?
  is_valid     Boolean  @default(true)
  expires_at   DateTime
  created_at   DateTime @default(now())
  updated_at   DateTime  @updatedAt

  user         User     @relation(fields: [employee_id], references: [employee_id])

  @@map("user_sessions")
  @@index([employee_id])
}

enum LogAction {
  CREATE
  UPDATE
  DELETE
}

model AuditLog {
  id           Int             @id @default(autoincrement())
  action       LogAction
  object_type  String
  object_id    Int
  user_id      Int   
  createdAt    DateTime        @default(now())

  user         User            @relation(fields: [user_id], references: [id], onDelete: Cascade)
  fields       AuditLogField[]

  @@map("audit_logs")
  @@index([user_id])
  @@index([object_type, object_id])
  @@index([createdAt])
}

model AuditLogField {
  id          Int       @id @default(autoincrement())
  audit_log_id  Int
  field       String
  oldValue    String?
  newValue    String?

  audit_log    AuditLog  @relation(fields: [audit_log_id], references: [id], onDelete: Cascade)

  @@map("audit_log_fields")
  @@index([audit_log_id])
}